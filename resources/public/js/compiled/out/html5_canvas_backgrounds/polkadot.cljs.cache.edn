;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name html5-canvas-backgrounds.polkadot, :imports nil, :requires {utils html5-canvas-backgrounds.utils, html5-canvas-backgrounds.utils html5-canvas-backgrounds.utils}, :uses nil, :defs {defaults {:name html5-canvas-backgrounds.polkadot/defaults, :file "src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 4, :column 1, :end-line 4, :end-column 14, :meta {:file "/Users/imogen/code/html5-canvas-backgrounds/src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 4, :column 6, :end-line 4, :end-column 14}}, offset {:name html5-canvas-backgrounds.polkadot/offset, :file "src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 8, :column 1, :end-line 8, :end-column 12, :meta {:file "/Users/imogen/code/html5-canvas-backgrounds/src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 8, :column 6, :end-line 8, :end-column 12}}, indent {:name html5-canvas-backgrounds.polkadot/indent, :file "src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 9, :column 1, :end-line 9, :end-column 12, :meta {:file "/Users/imogen/code/html5-canvas-backgrounds/src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 9, :column 6, :end-line 9, :end-column 12}}, left-pos {:protocol-inline nil, :meta {:file "/Users/imogen/code/html5-canvas-backgrounds/src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 11, :column 7, :end-line 11, :end-column 15, :arglists (quote ([row col spacing]))}, :name html5-canvas-backgrounds.polkadot/left-pos, :variadic false, :file "src/cljs/html5_canvas_backgrounds/polkadot.cljs", :end-column 15, :method-params ([row col spacing]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([row col spacing]))}, build-dot {:protocol-inline nil, :meta {:file "/Users/imogen/code/html5-canvas-backgrounds/src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([row col size spacing colors]))}, :name html5-canvas-backgrounds.polkadot/build-dot, :variadic false, :file "src/cljs/html5_canvas_backgrounds/polkadot.cljs", :end-column 16, :method-params ([row col size spacing colors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 5, :fn-var true, :arglists (quote ([row col size spacing colors]))}, build-pattern {:protocol-inline nil, :meta {:file "/Users/imogen/code/html5-canvas-backgrounds/src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 22, :column 7, :end-line 22, :end-column 20, :arglists (quote ([dot-size spacing colors canvas] [dot-size spacing colors canvas dots counter])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([dot-size spacing colors canvas] [dot-size spacing colors canvas dots counter]), :arglists ([dot-size spacing colors canvas] [dot-size spacing colors canvas dots counter]), :arglists-meta (nil nil)}}, :name html5-canvas-backgrounds.polkadot/build-pattern, :variadic false, :file "src/cljs/html5_canvas_backgrounds/polkadot.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([dot-size spacing colors canvas] [dot-size spacing colors canvas dots counter]), :arglists ([dot-size spacing colors canvas] [dot-size spacing colors canvas dots counter]), :arglists-meta (nil nil)}, :method-params ([dot-size spacing colors canvas] [dot-size spacing colors canvas dots counter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 6, :fn-var true, :arglists ([dot-size spacing colors canvas] [dot-size spacing colors canvas dots counter])}, draw {:protocol-inline nil, :meta {:file "/Users/imogen/code/html5-canvas-backgrounds/src/cljs/html5_canvas_backgrounds/polkadot.cljs", :line 36, :column 16, :end-line 36, :end-column 20, :export true, :arglists (quote ([opts]))}, :name html5-canvas-backgrounds.polkadot/draw, :variadic false, :file "src/cljs/html5_canvas_backgrounds/polkadot.cljs", :end-column 20, :method-params ([opts]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:top :fill :colors :radius :size :col :id :keywordize-keys :spacing :row :left}, :order [:size :spacing :colors :top :left :fill :radius :row :col :keywordize-keys :id]}, :doc nil}